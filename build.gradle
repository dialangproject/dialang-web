apply plugin: 'scala'
apply plugin: 'war'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.11.12'
    compile 'log4j:log4j:1.2.8'
    compile 'ch.qos.logback:logback-classic:1.0.11'
    compile 'org.clapper:grizzled-slf4j_2.11:1.3.1'
    compile 'commons-codec:commons-codec:1.11'
    compile 'commons-validator:commons-validator:1.6'
    compile 'org.dialang.common:dialang-common:1.1'
    compile 'net.oauth.core:oauth-provider:20100601'
    compile 'org.scalatra:scalatra_2.11:2.6.2'
    compile 'org.scalatra:scalatra-scalate_2.11:2.6.2'
    compile 'org.scalatra:scalatra-json_2.11:2.6.2'
    compile 'org.json4s:json4s-jackson_2.11:3.3.0'
    compile 'org.json4s:json4s-native_2.11:3.3.0'
    compile 'org.scalaj:scalaj-http_2.11:2.2.1'

    providedCompile 'javax.servlet:servlet-api:2.5'
    providedCompile 'org.postgresql:postgresql:9.3-1102-jdbc41'

    testCompile 'org.scala-lang:scala-library:2.11.12'
    testCompile 'org.scalatest:scalatest_2.11:2.2.1'
    testCompile 'simple-jndi:simple-jndi:0.11.4.1'
}

if (hasProperty('profile')) {
    apply from: "${profile}-profile.gradle"
} else {
    apply from: "dev-profile.gradle"
}

war.doLast {
    ant.unzip(src: war.archivePath, dest: "${buildDir}/exploded")
}

test << {

    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') {
        reporter(type: 'stdout')
    }
}
